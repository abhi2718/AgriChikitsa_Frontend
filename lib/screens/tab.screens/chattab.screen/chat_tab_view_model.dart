import 'dart:async';
import 'package:flutter/material.dart';

class ChatTabViewModel with ChangeNotifier {
  bool showFirstBubbleLoader = false;
  bool showSecondBubbleLoader = false;
  bool showFourthLoading = false;
  final dynamic questions = [
    {
      "id": "1",
      "question_hi": "ЁЯНГрдЕрдкрдиреА рдлрд╕рд▓ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗ рдПрдЧреНрд░реАрдЪрд┐рдХрд┐рддреНрд╕рд╛ рдХреЗ рд╕рд╛рдеред я┐╜",
      "question_en": "Know about your crop with Agrichikitsa",
      "isMe": false,
    },
    {
      "id": "3",
      "question_hi": "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдЖрдпреБ рд╕реАрдорд╛ рдЪрдиреБ реЗред",
      "question_en": "Choose Your Age",
      "options_hi": ["#30 рд╕рд╛рд▓ рд╕реЗ рдХрдо", "#30 рд╕рд╛рд▓ рд╕реЗ 50 рд╕рд╛рд▓", "#50 рд╕рд╛рд▓ рд╕реЗ рдЙрдкрд░"],
      "options_en": ["Below 30", "In Between 30 to 50", "50 plus"],
      "isAnswerSelected": false,
      "answer": "",
      "isMe": false,
    },
    {
      "id": "4",
      "question_hi":
          "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдлрд╕рд▓ рдЪреБрдиреЗрдВ, рдпрджрд┐ рдЖрдкрдХреА рдлрд╕рд▓ рдпрд╣рд╛рдБ рд▓рд┐рд╕реНрдЯ рдореЗрдВ рдирд╣реАрдВ рд╣реИ рддреЛ рдЕрдХрд┐рдВрдХрд┐рдд рдХрд░реЗрдВред тПм",
      "question_en":
          "Now Select your crop. Note: If the crop is not in the list, then type your crop name",
      "options_hi": [
        "рдзрд╛рди",
        "рдЧреЗрд╣реВрдБ",
        "рдЕрд░рд╣рд░",
        "рд╢рд▓рдЬрдо",
        "рдзрдирдпрд╛",
        "рдореВрд▓",
        "рдЧрд╛рдЬрд░",
        "рдлреВрд▓рдЧреЛрднреА",
        "рдкрд╛рдЧреЛрднреА",
        "рдмреИрдЧрди",
        "рдЦреАрд░рд╛",
        "рдЪреБрдХрдВрджрд░",
        "рдпрд╛рдЬ",
        "рдордЪ",
        "рд╢рдорд▓рд╛рдордЪ",
        "рдЕрджрд░рдХ",
        "рдЖрдо",
        "рдХреЗрд▓рд╛",
        "рдкрдкреАрддрд╛"
      ],
      "isAnswerSelected": false,
      "answer": "",
      "isMe": false,
    }
  ];
  var chatMessages = [];

  void initialTask() {
    if (chatMessages.isEmpty) {
      chatMessages.add(questions[0]);
      Timer(const Duration(seconds: 2), () {
        showFirstBubbleLoader = true;
        notifyListeners();
      });
      Timer(const Duration(seconds: 4), () {
        showFirstBubbleLoader = false;
        chatMessages.add(questions[1]);
        handleSecondBubbleLoader();
        notifyListeners();
      });
    }
  }
  
  void loadGreating(String name) {
    final messageHi =
        'рдирдорд╕реНрдХрд╛рд░ $name рдЬреАЁЯдЧ, рдЖрдкрдХрд╛ рдПрдЧреНрд░реАрдЪрд┐рдХрд┐рддреНрд╕рд╛ рдореЗрдВ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдЗрд╕ рдордЪреНрдЫ рд╕реЗ рд╣рдо рдЖрдкрдХреЗ рдлрд╕рд▓реЛрдВ рдХреЗ рд░реЛрдЧреЛрдВ рдПрд╡рдВ рд╕рдмрдВрдзрд┐рдд рд╕рдорд╕реНрдпрд╛рдУрдВ рдХрд╛ рд╕рдорд╛рдзрд╛рди рджреЗрдиреЗрдХреА рдХреЛрд╢рд┐рд╢ рдХрд░ рд░рд╣реЗрд╣реИред рдХреГрдкрдпрд╛ рдиреАрдЪреЗ рдкрдЫреВрдП рдЧрдП рд╕рд╡рд╛рд▓реЛрдВ рдХреЗ рд╕рд╣реА рдЙрддреНрддрд░ рдЪреБрдиреЗредтПм';
    final messageEn = 'Hello $name, Welcome to Agrichikitsa';
    final greating = {
      "id": "2",
      "question_hi": messageHi,
      "question_en": messageEn,
      "isMe": false,
    };
    questions.insert(1, greating);
  }

  void handleSecondBubbleLoader() {
    showSecondBubbleLoader = true;
    notifyListeners();
    Timer(const Duration(seconds: 4), () {
      showSecondBubbleLoader = false;
      chatMessages.add(questions[2]);
      notifyListeners();
    });
  }

  void selectAge(String age, String id) {
    var updatedChatMessages = chatMessages.map((item) {
      if (item['id'] == id) {
        return {
          ...item,
          "isAnswerSelected": true,
          "answer": age,
        };
      }
      return item;
    });
    chatMessages = updatedChatMessages.toList();
    notifyListeners();
    loadQuestionFour();
  }

  void loadQuestionFour() {
    showFourthLoading = true;
    notifyListeners();
    Timer(const Duration(seconds: 4), () {
      showFourthLoading = false;
      chatMessages.add(questions[3]);
      notifyListeners();
    });
  }

void handleSelctCrop(String crop, String id){
var updatedChatMessages = chatMessages.map((item) {
      if (item['id'] == id) {
        return {
          ...item,
          "isAnswerSelected": true,
          "answer": crop,
        };
      }
      return item;
    });
    chatMessages = updatedChatMessages.toList();
    notifyListeners();
}

  
}
